{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","document","addEventListener","e","setVelocity","setTimeout","gameLoop","state","snake","tail","length","getRandomApple","newApple","row","Math","floor","random","col","isTail","head","gameOver","setState","_ref","apple","collidesWithApple","nextState","objectSpread","velocity","y","x","concat","toConsumableArray","pop","isOffEdge","_this$state","isApple","cell","isHead","find","inTail","event","keyCode","_ref2","_ref3","_ref4","_ref5","grid","cols","push","_this2","_this$state2","react_default","a","createElement","className","map","i","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86b9659a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const grid = [];\n\n    for (let row = 0; row < 20; row++) {\n      const cols = [];\n      for(let col = 0; col < 20; col++) {\n        cols.push({\n          row,\n          col\n        });\n      }\n      grid.push(cols);\n    }\n    this.state = {\n      grid,\n      apple: {\n        row: Math.floor(Math.random() * 20),\n        col: Math.floor(Math.random() * 20),\n      },\n      snake: {\n        head: {\n          row: 9,\n          col: 9\n        },\n        velocity: {\n          x: 1,\n          y: 0\n        },\n        tail: []\n      }\n    }\n  }\n\n\n  componentDidMount = () => {\n    document.addEventListener('keydown', (e) => {\n      this.setVelocity(e);\n    });\n    setTimeout(() => {\n      this.gameLoop()\n    }, this.state.snake.tail.length  ? (400 / this.state.snake.tail.length) + 200: 600);\n  }\n\n  getRandomApple = () => {\n    const { snake } = this.state;\n    const newApple = {\n      row: Math.floor(Math.random() * 20),\n      col: Math.floor(Math.random() * 20),\n    };\n    if(this.isTail(newApple) || (\n      snake.head.row === newApple.row \n      && snake.head.col === newApple.col)) {\n      return this.getRandomApple();\n    } else {\n      return newApple;\n    }\n  }\n\n  gameLoop = () => {\n    if (this.state.gameOver) return;\n    \n    this.setState(({ snake, apple }) => {\n      const collidesWithApple = this.collidesWithApple();\n      const nextState = {\n        snake: {\n          ...snake,\n          head: {\n            row: snake.head.row + snake.velocity.y,\n            col: snake.head.col + snake.velocity.x\n          },\n          tail: [snake.head, ...snake.tail]\n        },\n        apple: collidesWithApple ? this.getRandomApple (): apple\n      };\n\n      if(!collidesWithApple) nextState.snake.tail.pop();\n\n      return nextState;\n    }, () => {\n      const {snake} = this.state;\n      if(this.isOffEdge() || this.isTail(snake.head)) {\n        this.setState({\n          gameOver: true,\n        })\n        return;\n      }\n  \n      setTimeout(() => {\n        this.gameLoop()\n      }, this.state.snake.tail.length ? (400 / this.state.snake.tail.length) + 200: 600);\n\n    });\n\n  }\n\n  isOffEdge = () => {\n    const { snake } = this.state;\n\n    if (snake.head.col > 19\n      || snake.head.col < 0\n      || snake.head.row > 19\n      || snake.head.row < 0) {\n        return true;\n      }\n  }\n\n  collidesWithApple = () => {\n    const { apple, snake } = this.state;\n    return apple.row === snake.head.row\n    && apple.col === snake.head.col; \n  }\n\n  isApple = (cell) => {\n    const { apple } = this.state;\n    return apple.row === cell.row\n    && apple.col === cell.col; \n  } \n\n  isHead = (cell) => {\n    const { snake } = this.state;\n    return snake.head.row === cell.row\n      && snake.head.col === cell.col;\n  }\n\n  isTail = (cell) => {\n    const { snake } = this.state;\n    return snake.tail.find( inTail => inTail.row === cell.row && inTail.col === cell.col);\n  }\n\n  setVelocity = (event) => {\n    const {snake} = this.state;\n    if (event.keyCode === 38) { // up\n      if(snake.velocity.y === 1 ) return;\n      this.setState(({snake}) => ({\n        snake: {\n          ...snake,\n          velocity: {\n            x: 0,\n            y: -1,\n          }\n        }\n      }))\n    } else if (event.keyCode === 40) { // down\n      if(snake.velocity.y === -1 ) return;\n      this.setState(({snake}) => ({\n        snake: {\n          ...snake,\n          velocity: {\n            x: 0,\n            y: 1,\n          }\n        }\n      }))\n    } else if (event.keyCode === 37) { // left\n      if(snake.velocity.x === 1 ) return;\n      this.setState(({snake}) => ({\n        snake: {\n          ...snake,\n          velocity: {\n            x: -1,\n            y: 0,\n          }\n        }\n      }))    \n    } else if (event.keyCode === 39) { // right\n      if(snake.velocity.x === -1 ) return;\n      this.setState(({snake}) => ({\n        snake: {\n          ...snake,\n          velocity: {\n            x: 1,\n            y: 0,\n          }\n        }\n      }))    \n    }\n  }\n\n  render() {\n    const { grid, snake, gameOver } = this.state;\n    return (\n      <div className=\"App\">\n      {\n        gameOver\n        ? <section className=\"gameOverGrid\">\n            <h1>Game Over! You scored {snake.tail.length + 1}!</h1>\n            <p className=\"reset\">Press f5 to Restart</p>\n          </section>\n        : <section className=\"grid\">\n          {\n            grid.map((row, i) => (\n              row.map(cell => (\n                <div key={`${cell.row} ${cell.col}`} className={`cell\n                  ${\n                    this.isHead(cell)\n                    ? 'head' : this.isApple(cell)\n                    ? 'apple' : this.isTail(cell)\n                    ? 'tail' : ''\n                  }`\n                }>\n                </div>\n              ))\n            ))\n          }\n        </section> \n      }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}